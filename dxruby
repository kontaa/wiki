
require 'dxruby'

class ImagePane
  def initialize(file, x, y)
    @image = Image.load(file)
    @x, @y = x, y

    @ix, @iy = 0, 0
    @xy_div = 3

    iw,  ih = 30, 30
    @iw = [iw, biw].min
    @ih = [ih, bih].min
    set_slice
  end

  def xd
    @iw.div(@xy_div)
  end

  def yd
    @ih.div(@xy_div)
  end

  def biw
     @image.width
  end

  def bih
     @image.height
  end

  def move_left
    if @ix - xd < 0
      @ix = 0
    else
      @ix -= xd
    end
    set_slice
  end

  def move_right
    w = biw - @iw
    if @ix + xd > w
      @ix = w
    else
      @ix +=xd
    end
    set_slice
  end

  def move_up
    if @iy - yd < 0
      @iy = 0
    else
      @iy -= yd
    end
    set_slice
  end

  def move_down
    h = bih - @ih
    if @iy + yd > h
      @iy = h
    else
      @iy += yd
    end
    set_slice
  end

  def set_slice
    @slice = @image.slice(@ix, @iy, @iw, @ih)
  end

  def draw
    Window.draw(@x, @y, @slice)
  end

  def argb(x, y)
    @slice[x - @x, y - @y]
  end

end

class TextPane
  def initialize(font_size)
    @font = Font.new(font_size)
    @x = 10
    @y = 3
    @fmt = "HSV: %3.0f, %5.3f, %5.3f"
  end

  def draw(hsvp)
    h, s, v = *hsvp
    m = sprintf(@fmt, h, s, v)
    Window.draw_font(@x, @y, m, @font)
  end
end

class HSVPane
  def initialize
    @r = 100
    @x, @y = 10, 30
    @image = reset_image(@r)
  end

  def reset
    @image = reset_image(@r)
  end

  def set(argb)
    @argb = argb
    a, r, g, b = argb

    r = r / 255.0
    g = g / 255.0
    b = b / 255.0

    cmin = [r, g, b].min
    cmax = [r, g, b].max

    if cmin == cmax
      h = 0.0
      v = cmin
      s = 0.0
    else
      if cmin == b
        h = 60 * (g - r) / (cmax -cmin) + 60
      end
      if cmin == r
        h = 60 * (b - g) / (cmax -cmin) + 180
      end
      if cmin == g
        h = 60 * (r - b) / (cmax -cmin) + 300
      end
      v = cmax
      s = (cmax - cmin)        # 円錐モデル
      s = (cmax - cmin) / cmax # 円柱モデル
    end

    @h, @s, @v = h, s, v
    [@h, @s, @v]
  end

  def reset_image(r)
    x0 = r
    y0 = r
    gray = [255, 100, 100, 100]
    image = Image.new(r * 2, r * 2)
    image.circle(x0, y0, r, gray)
    image
  end

  def draw
    t = @h / 360.0 * 2 * Math::PI
    x = @r + (@s * @r * Math.cos(t)).to_i
    y = @r + (@s * @r * Math.sin(t)).to_i
    #@image.box_fill(x-1, y-1, x+1, y+1, @argb)
    @image.circle(x, y, 1, @argb)
    Window.draw(@x, @y, @image)
  end
end


file = "c:\\tmp\\img\\b.png"

text = TextPane.new(11)
bi   = ImagePane.new(file, 300, 30)
hsvp = HSVPane.new

Window.loop do
  break if Input.key_push?(K_ESCAPE) 
  break if Input.key_push?(K_Q) 

  bi.move_left  if Input.key_push?(K_J) # <
  bi.move_right if Input.key_push?(K_L) # >
  bi.move_up    if Input.key_push?(K_I) # ^
  bi.move_down  if Input.key_push?(K_K) # v

  hsvp.reset  if Input.key_push?(K_R) # r

  bi.draw

  mx = Input.mouse_pos_x
  my = Input.mouse_pos_y

  argb = bi.argb(mx, my)

  hsv = hsvp.set(argb)

  hsvp.draw
  text.draw(hsv)
end
